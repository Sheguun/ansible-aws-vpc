---
- name: Setup Tomcat 8 on Ubuntu App Server
  hosts: appsrvgrp
  become: yes
  vars:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}"
    tom_url: https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz
  tasks:
    - name: Ensure default packages are up to date
      apt:
        update_cache: yes
        cache_valid_time: 86400

    - name: Install required packages
      apt:
        name: openjdk-11-jdk
        state: present
        update_cache: yes

    - name: Download Tomcat 8 binary
      get_url:
        url: "{{ tom_url }}"
        dest: /tmp/tomcat-8.tar.gz

    - name: Create tomcat group
      group:
        name: tomcat
        state: present

    - name: Create tomcat user
      user:
        name: tomcat
        group: tomcat
        shell: /bin/nologin
        home: /usr/local/tomcat8

    - name: Create temporary extraction directory
      file:
        path: /tmp/tomcat8
        state: directory

    - name: Extract Tomcat
      unarchive:
        src: /tmp/tomcat-8.tar.gz
        dest: /tmp/tomcat8/
        remote_src: yes
        list_files: yes
      register: unarchive_info

    - name: Debug top-level folder in archive
      debug:
        msg: "{{ unarchive_info.files[0].split('/')[0] }}"

    - name: Move Tomcat content to destination
      synchronize:
        src: "/tmp/tomcat8/{{ unarchive_info.files[0].split('/')[0] }}/"
        dest: /usr/local/tomcat8/
      delegate_to: "{{ inventory_hostname }}"

    - name: Set proper permissions on tomcat home
      file:
        path: /usr/local/tomcat8
        owner: tomcat
        group: tomcat
        recurse: yes

    - name: Deploy Tomcat systemd service file for Ubuntu >= 16
      template:
        src: templates/ubuntu16-svcfile.j2
        dest: /etc/systemd/system/tomcat.service
        mode: "a+x"

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Tomcat service
      service:
        name: tomcat
        state: started
        enabled: yes
      tags:
        - svc

    - stat:
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
        - deploy

    - name: Stop tomcat service
      service:
        name: tomcat
        state: stopped
      tags:
        - deploy

    - name: Try Backup and Deploy Artifact
      block:
        - name: Archive current ROOT dir with timestamp
          archive:
            path: /usr/local/tomcat8/webapps/ROOT
            dest: "/opt/ROOT_{{ timestamp }}.tar.gz"
            format: gz
          when: artifact_stat.stat.exists
          register: archive_info
          tags:
            - deploy

        - name: Copy ROOT dir as old_ROOT
          shell: cp -r ROOT old_ROOT
          when: artifact_stat.stat.exists
          args:
            chdir: /usr/local/tomcat8/webapps/

        - name: Delete current ROOT directory
          file:
            path: "{{ item }}"
            state: absent
          when: archive_info.changed
          loop:
            - /usr/local/tomcat8/webapps/ROOT
            - /usr/local/tomcat8/webapps/ROOT.war
          tags:
            - deploy

        - name: Deploy new ROOT.war
          block:
            - name: Deploy vprofile artifact
              copy:
                src: files/ROOT.war
                dest: /usr/local/tomcat8/webapps/ROOT.war
                force: yes
              register: deploy_info
              tags:
                - deploy

            - name: Start tomcat8 svc
              service:
                name: tomcat
                state: started
              when: deploy_info.changed
              tags:
                - deploy

          rescue:
            - name: Rollback to previous ROOT deployment
              shell: cp -r old_ROOT ROOT
              args:
                chdir: /usr/local/tomcat8/webapps/
              tags:
                - rollback

            - name: Start tomcat service after rollback
              service:
                name: tomcat
                state: started
              tags:
                - rollback

    - name: Wait until ROOT directory is extracted from ROOT.war
      wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
        - deploy

    - name: Deploy custom web configuration file
      template:
        src: templates/application.j2
        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
        force: yes
      notify: Restart tomcat
      tags:
        - deploy

    - name: Clean up temporary Tomcat extraction directory
      file:
        path: /tmp/tomcat8
        state: absent
      tags:
        - cleanup

  handlers:
    - name: Restart tomcat
      service:
        name: tomcat
        state: restarted
